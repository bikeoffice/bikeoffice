name: Deploy to Amazon ECS

on:
  push:
    branches: ["feat/deploy"]

env:
  AWS_REGION: us-east-1
  ECS_SERVICE: production
  ECS_CLUSTER: production
  FRONT_REPOSITORY: bikeoffice-web
  BACK_REPOSITORY: bikeoffice-api
  FRONT_TASK_FAMILY: front_production
  BACK_TASK_FAMILY: back_production

jobs:
  setup:
    name: Setup
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: JeJe
        run: |
          touch front-hash-old
          touch back-hash-old

      - name: Download Front Hash
        uses: actions/download-artifact@v3

      - name: Build Project
        run: |
          npm ci
          npm i -g nx
          nx run-many -t build

      - name: Save Front Hash
        run: echo "$(tar cf - ./dist/$FRONT_REPOSITORY | sha1sum)" > front-hash-new

      - name: Save Back Hash
        run: echo "$(tar cf - ./dist/$BACK_REPOSITORY | sha1sum)" > back-hash-new

      - name: Compare Front files
        run: |
          if diff -q front-hash-new front-hash-old >/dev/null; then
            echo "FRONT_CHANGED=true" >> $GITHUB_ENV
          fi

      - name: Compare Back files
        run: |
          if diff -q back-hash-new back-hash-old >/dev/null; then
            echo "BACK_CHANGED=true" >> $GITHUB_ENV
          fi

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

  front_deploy:
    needs: setup
    if: needs.setup.outputs.FRONT_CHANGED == true
    name: Front Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Archive front hash
        uses: actions/upload-artifact@v3
        with:
          name: front-hash-old
          path: front-hash-new

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -f ./$FRONT_REPOSITORY/Dockerfile -t $ECR_REGISTRY/$FRONT_REPOSITORY -t $ECR_REGISTRY/$FRONT_REPOSITORY:$IMAGE_TAG
          docker push -a $ECS_REGISTRY/$FRONT_REPOSITORY

      - name: Download task definition
        run: aws ecs describe-task-definition --task-definition $FRONT_TASK_FAMILY --query taskDefinition > task-definition.json

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: task-definition.json
          service: ${{ env.ECS_SERVICE }}
          cluster: ${{ env.ECS_CLUSTER }}
          wait-for-service-stability: false

  back_deploy:
    needs: setup
    if: needs.setup.outputs.BACK_CHANGED == true
    name: Back Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Archive back hash
        uses: actions/upload-artifact@v3
        with:
          name: back-hash-old
          path: back-hash-new

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -f ./$BACK_REPOSITORY/Dockerfile -t $ECR_REGISTRY/$BACK_REPOSITORY -t $ECR_REGISTRY/$BACK_REPOSITORY:$IMAGE_TAG
          docker push -a $ECS_REGISTRY/$BACK_REPOSITORY

      - name: Download task definition
        run: aws ecs describe-task-definition --task-definition $BACK_TASK_FAMILY --query taskDefinition > task-definition.json

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: task-definition.json
          service: ${{ env.ECS_SERVICE }}
          cluster: ${{ env.ECS_CLUSTER }}
          wait-for-service-stability: false
